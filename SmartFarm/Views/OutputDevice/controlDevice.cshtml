@using System.Collections.Generic;
@using SmartFarm.Models;
@model List<OutputModel>;
@{
  ViewData["Title"] = "Remote Control";
}
@section CustomCss{
<link rel="stylesheet" type="text/css" href="/css/dinhCss.css" />
}
<!-- -----------------SECTION CONTENT------------------ -->
<section class="section-content">
  <h1 class="heading-1 mb-5 d-flex align-items-center">
    <img src="/image/cogs-solid.svg" class="heading__icon me-4" />
    Điều khiển từ xa
  </h1>

  <div class="row">
    <div class="col-12 col-lg-4 mb-5 mb-lg-0">
      <figure class="map">
        <figcaption class="map__unit">(&#13217;)</figcaption>
        <img src="/image/map.png" class="img-fluid" alt="map image" />
      </figure>
    </div>

    <div class="col-lg-8 col-12">
      <div class="devices">
        <div class="device-output mb-5">
          <h2 class="heading-2 device-type mb-5">Output</h2>
          <div class="device-container" style="margin-top: 3rem;">
            @foreach (var sp in Model)
            {
              <figure class="device__figure">
                <img src="@sp.img" alt="device image" class="device__img" />
                <div class="device__details">
                  <div class="device__name">@sp.name</div>
                  <div class="device__coordinates">
                    @sp.viTri
                  </div>
                </div>
                <label class="switch3">
                  <input type="checkbox" feedName="@sp.feedName" value="@sp.valueOpen"
                  inputFeedName="@sp.inputOupts.feedName" time="@sp.inputOupts.timeSet.TotalSeconds"
                  Max="@sp.inputOupts.nguongMax" Min="@sp.inputOupts.nguongMin" auto="@sp.auto1" />
                  <div></div>
                </label>
                <div style="font-size: 1.8rem;font-weight: 700;color: black;grid-area: 3/1/span 1/span 1;">Tự động:</div>
                <form asp-controller="OutputDevice" asp-action="UpdateAutoController" method="post" class="submit">
                  <input type="checkbox" checked data-toggle="toggle" data-onstyle="success" data-offstyle="danger"
                  style="grid-area: 3/2/span 1/span 1;" class="setNguong" value="@sp.auto1" />
                  <input type="hidden" value="@sp.id" name="id" />
                  <input type="hidden" value="" name="i" />
                </form>
              </figure>
              <input type="hidden" value="@Model[0].AioKey" id="aiokey"/>
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
@section Scripts{
<link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/css/bootstrap4-toggle.min.css"
  rel="stylesheet">
<script src="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/js/bootstrap4-toggle.min.js"></script>
<script type="text/javascript">
  document.querySelectorAll(".submit").forEach((el) => {
    console.log(el.children[2].getAttribute("value"));
    el.firstElementChild.onchange = function (e) {
      console.log(e);
      if (this.checked) el.children[2].setAttribute("value", 1);
      else el.children[2].setAttribute("value", 0);
      el.submit();
    };
    console.log(el.children[0].checked)
    console.log(el.children[0].getAttribute("value"));
    if (el.children[0].getAttribute("value") === '1') el.children[0].checked = true;
    else el.children[0].checked = false;
  });
  var a=document.querySelector("#aiokey").getAttribute("value");
  var user_Adafruit = {
    aIO_key: a,
    userName: "luucongdinh"
  };
  function requestPost(key_feed, aIO_key, userName, data) {
    var _data = { value: `${data}` };
    var url = `https://io.adafruit.com/api/v2/${userName}/feeds/${key_feed}/data`;
    fetch(url, {
      method: "POST",
      body: JSON.stringify(_data),
      headers: {
        "Content-Type": "application/json",
        "X-Aio-Key": `${aIO_key}`
      }
    })
      .then(response => response.json())
      .then(json => console.log(json))
      .catch(err => console.log(err));
  }
  document.querySelectorAll(".switch3 input").forEach((el) => {
    var dad = el.parentElement;
    var key_feed = el.getAttribute("feedName");
    console.log(el.getAttribute("time"));
    var url = `https://io.adafruit.com/api/v2/${user_Adafruit.userName}/feeds/${key_feed}/data?limit=1`;
    fetch(url, {
      method: "GET",
      headers: {
        "X-Aio-Key": `${user_Adafruit.aIO_key}`
      }
    })
      .then(response => response.json())
      .then(data => {
        console.log(typeof el.getAttribute("value"))
        if (data[0].value === el.getAttribute("value")) {
          if (el.checked == false) {
            el.checked = true;
            if (dad.classList.length == 1) dad.classList.add("switch3-checked");
          }
        }
        else {
          el.checked = false;
          dad.classList.remove("switch3-checked");
        }
      })
      .catch(err => console.log(err));
  });
  function initial(el) {
    var dad = el.parentElement;
    var key_feed = el.getAttribute("inputFeedName");
    var url = `https://io.adafruit.com/api/v2/${user_Adafruit.userName}/feeds/${key_feed}/data?limit=1`;
    fetch(url, {
      method: "GET",
      headers: {
        "X-Aio-Key": `${user_Adafruit.aIO_key}`
      }
    })
      .then(response => response.json())
      .then(data => {
        var data1 = el.getAttribute("value");
        if (parseFloat(data[0].value, 10) < parseFloat(el.getAttribute("Min"), 10)) {
          if (el.checked == false) {
            el.checked = true;
            if (dad.classList.length == 1) dad.classList.add("switch3-checked");
            requestPost(key_feed, user_Adafruit.aIO_key, user_Adafruit.userName, data1.toString());
          }
        }
        else if (parseFloat(data[0].value, 10) > parseFloat(el.getAttribute("Max"), 10)) {
          if (el.checked == true) {
            el.checked = false;
            dad.classList.remove("switch3-checked");
            requestPost(key_feed, user_Adafruit.aIO_key, user_Adafruit.userName, (data1 - 1).toString());
          }
        }
      })
      .catch(err => console.log(err));
  }
  document.querySelectorAll(".switch3 input").forEach((el) => {
    console.log("value", el.getAttribute("auto"))
    if (el.getAttribute("auto") == 1)
      setInterval(initial, el.getAttribute("time") * 1000, el);
  });
  document.querySelectorAll(".switch3 input").forEach((el) => {
    var dad = el.parentElement;
    var key_feed = el.getAttribute("feedName");
    var data
    el.addEventListener("change", function (e) {
      data = el.getAttribute("value")
      if (this.checked) {
        if (dad.classList.length == 1) dad.classList.add("switch3-checked");
        requestPost(key_feed, user_Adafruit.aIO_key, user_Adafruit.userName, data.toString());
      }
      else {
        dad.classList.remove("switch3-checked");
        console.log(data - 1)
        requestPost(key_feed, user_Adafruit.aIO_key, user_Adafruit.userName, (data - 1).toString());
      }
    });
  });
</script>
}
